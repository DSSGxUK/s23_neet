from pandera import DataFrameSchema, Column, Check
from neet.data_sources.schema.dtypes import YesNoBool


_schema = DataFrameSchema(
    columns={
        "stud_id": Column(
            dtype=str,
            nullable=False,
            unique=False,
            required=True,
            description="Unique Identifier for each student",
            title="UID",
        ),
        "age": Column(
            dtype="Int8",
            checks=[
                Check.greater_than_or_equal_to(min_value=16.0),
                Check.less_than_or_equal_to(max_value=25.0),
            ],
            nullable=True,
            description=None,
            title=None,
        ),
        "academic_age": Column(
            dtype="Int8",
            checks=[
                Check.greater_than_or_equal_to(min_value=16.0),
                Check.less_than_or_equal_to(max_value=25.0),
            ],
            nullable=True,
            description=None,
            title=None,
        ),
        "support_level": Column(
            dtype="category",
            checks=[Check.isin(allowed_values=[1, 2, 3])],
            nullable=True,
            description=None,
            title=None,
        ),
        "looked_after_in_care": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "caring_for_own_child": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "refugee_asylum_seeker": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "carer_not_own_child": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "substance_misuse": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "care_leaver": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=False,
            description=None,
            title=None,
        ),
        "supervised_by_yots": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "pregnancy": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "parent": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "teenage_mother": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "send": Column(
            dtype=YesNoBool(),
            checks=None,
            nullable=True,
            description=None,
            title=None,
        ),
        "alternative_provision": Column(
            dtype=YesNoBool(),
            nullable=True,
            coerce=True,
            description=None,
            title=None,
        ),
        "sensupport": Column(
            dtype=YesNoBool(),
            checks=None,
            nullable=True,
            description=None,
            title=None,
        ),
        "confirmed_date": Column(
            dtype="object",
            nullable=True,
            description=None,
            title=None,
        ),
        "postcode": Column(
            dtype="category",
            #checks=[Check.not_equal_to("ZZ999ZZ"), Check.not_equal_to("ZZ99 9ZZ")],
            nullable=True,
            description=None,
            title=None,
        ),
        "nccis_code": Column(
            dtype="Int32",
            checks=[
                Check.isin(
                    allowed_values=[
                        210,
                        220,
                        230,
                        240,
                        250,
                        260,
                        270,
                        280,
                        290,
                        310,
                        320,
                        330,
                        340,
                        350,
                        360,
                        380,
                        381,
                        550,
                        410,
                        430,
                        440,
                        450,
                        460,
                        530,
                        540,
                        610,
                        615,
                        616,
                        619,
                        620,
                        630,
                        640,
                        650,
                        660,
                        670,
                        680,
                        710,
                        810,
                        820,
                        830,
                    ]
                )
            ],
            nullable=True,
            description=None,
            title=None,
        ),
        "ncciscohort": Column(
            dtype="category",
            checks=None,
            nullable=True,
            description=None,
            title=None,
        ),
    },
    coerce=True,
    strict="filter",
    name="nccis",
    ordered=False,
    report_duplicates="all",
    unique_column_names=True,
    add_missing_columns=False,
    title="NCCIS",
    description="Schema for NCCIS data",
)
